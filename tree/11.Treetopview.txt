Problem Name: Tree top view
Problem Difficulty: None
Problem Constraints: No of nodes in the tree can be less than or equal to 10^7
Problem Description:
Given a binary tree , print the nodes in left to right manner as visible from above the tree

Input Format: Level order input for the binary tree will be given.
Sample Input: 1 2 3 4 5 6 -1 -1 -1 -1 -1 -1 -1
Output Format: A single line containing space separated integers representing the top view of the tree
Sample Output: 4 2 1 3



=====Solution=====
#include <iostream>
#include <map>
#include <queue>
using namespace std;

class node{
public:
    int data;
    node*left;
    node*right;

    node(int d){
        data = d;
        left = NULL;
        right = NULL;
    }
};


node* buildTreeLevelWise(){

    int d;
    cin>>d;

    node*root = new node(d);
    queue<node*> q;
    q.push(root);

    while(!q.empty()){

        node*f = q.front();
        q.pop();
        int c1,c2;
        cin>>c1>>c2;

        if(c1!=-1){
            f->left = new node(c1);
            q.push(f->left);
        }
        if(c2!=-1){
            f->right = new node(c2);
            q.push(f->right);
        }
    }
    return root;
}

void topView1(node *root, int level, int dist, map<int, pair<int, int> > &mp) {
    if(root == NULL) {
        return;
    }
    if(mp.find(dist) == mp.end() or level<mp[dist].second) {
        mp[dist] = {root->data, level};
    }
    topView1(root->left, level+1, dist-1, mp);
    topView1(root->right, level+1, dist+1, mp);
}

void topView(node *root)
{
   map<int, pair<int, int> >mp;
   topView1(root, 0, 0, mp);
   for(auto val:mp){
       cout<<val.second.first<<" ";
   }
}


int main(){
    node *root = buildTreeLevelWise() ;
    topView(root);

    return 0;
}